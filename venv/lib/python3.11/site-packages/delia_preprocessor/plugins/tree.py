#-*- coding: utf-8 -*-
from .base import EventPlugin

class TreePlugin(EventPlugin):
    '''Get the tree of dependences'''
    
    def configure(self, desc, data):
        '''Configure the plug in'''
        # Store the nodes
        self.entries = {0: []}
        # Get the stack
        self.stack = [0, ]
    
    def on_I_STEP_IN(self, event, kind, text, index):
        '''Step in an include'''
        # Get the father
        father = self.stack[-1]
        # Add the file to the stack
        self.stack.append(index)
        # Check if entry exists
        if index not in self.entries: self.entries[index] = []
        # Add child
        if index not in self.entries[father]: self.entries[father].append(index)
    
    def on_I_STEP_OUT(self, event, kind, text, index):
        '''Step out an include'''
        # Pop the file of the stack
        self.stack.pop()
        
    def get(self):
        '''Return the tree'''
        # Return data
        return self.entries
    

        