#-*- coding: utf-8 -*-
import os
import string
import datetime

def resolve(cls):
    '''Resolve the provided class (see: logging)'''
    cls = cls.split('.')
    used = cls.pop(0)
    found = __import__(used)
    for n in cls:
        used = used + '.' + n
        try:
            found = getattr(found, n)
        except AttributeError:
            __import__(used)
            found = getattr(found, n)
    return found

def isiterable(func):
    '''Check if the provided function can be iterated'''
    return hasattr(func, '__iter__')

def posix():
    '''Return True if run on POSIX platform'''
    return os.name == 'posix'

def get_svn_date(client, url, revision):
    '''Get the corresponding date of the revision'''
    #return datetime.datetime.fromtimestamp(client.info2(url, recurse=False, revision=revision)[0][1]['last_changed_date'])
    return datetime.datetime.strptime(client.revpropget('svn:date', url, revision=revision)[1].split('.')[0], '%Y-%m-%dT%H:%M:%S')

def get_svn_revision(client, url, revision):
    '''Get the revision of the head'''
    return client.info2(url, recurse=False, revision=revision)[0][1]['last_changed_rev'].number
