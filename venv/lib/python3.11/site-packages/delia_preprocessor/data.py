#-*- coding: utf-8 -*-

class Data(dict):
    '''Dictionary of configuration provided to plug in'''

    _boolean_states = {'1': True, 'yes': True, 'true': True, 'on': True,
                       '0': False, 'no': False, 'false': False, 'off': False}

    def _get(self, conv, *args):
        '''Get a value and cast it'''
        return conv(self.get(*args))

    def getint(self, *args):
        '''Get a value and cast it in integer'''
        return self._get(int, *args)

    def getfloat(self, *args):
        '''Get a value and cast it in float'''
        return self._get(float, *args)

    def getboolean(self, *args):
        '''Get a value and cast it in boolean'''
        v = self.get(*args)
        if type(v) == bool: return v
        if v.lower() not in self._boolean_states:
            raise ValueError('Not a boolean: %s' % v)
        return self._boolean_states[v.lower()]
    
def create(**kwds):
    '''Create a data object given the inputs'''
    # Create the object
    data = Data()
    # Go threw the keys
    for key in kwds.keys():
        # Add it
        data[key] = kwds[key]
    # Return data
    return data

    