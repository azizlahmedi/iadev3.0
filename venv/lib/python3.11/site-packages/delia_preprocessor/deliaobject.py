# -*- coding: utf-8 -*-

from delia_commons import Context
from .macro import scan_macro
from .include import scan_include
from .iterator import filter
from .provider import FileProvider


class DeliaObject():

    def __init__(self, name, source=None, provider=None):

        self.name = name

        if provider is None:
            self.provider = FileProvider()
        else:
            self.provider = provider

        if source is None:
            self.source = name
        else:
            self.source = source

        self.reset()

    def reset(self):
        self.files = []
        self.macros = {}

    def __set_files(self, file_list):
        # Store the list of files
        self.__files = file_list

    def __get_files(self):
        return self.__files

    files = property(__get_files, __set_files)

    def __set_macros(self, macro_dic):
        # Store the dictionary of macro
        self.__macros = macro_dic

    def __get_macros(self):
        return self.__macros

    macros = property(__get_macros, __set_macros)

    def get_scanner(self):
        scanner, _ = self.provider.get(Context(), True, self.source)
        return scanner

    def get_scanner_include(self):
        '''Scan includes'''
        scanner = self.get_scanner()
        # Return the generator that scans includes
        return filter(scan_include(scanner=scanner, path=scanner.path, provider=self.provider, files=self.files, stack=[]))

    def scan_all(self):
        scanner = self.get_scanner()
        # Return the generator that scans includes and macro
        return filter(scan_macro(scan_include(scanner=scanner, path=scanner.path, provider=self.provider, files=self.files, stack=[]),
                      acros=self.macros, files=self.files, stack=[]))

    def get_scanner_include_deprecated(self):
        '''TODO: do not use'''
        from .deprecated.cinclude import scanne_include
        from delia_tokenizer import ctokenize
        self.include_dic = []
        return scanne_include(scanner=ctokenize.ScannerFromFile(self.source), include_dic=self.include_dic, include_stack=[])

    def scanne_all_deprecated(self):
        '''TODO: do not use'''
        from .deprecated.cmacro import scanne_macro
        from .deprecated.cinclude import scanne_include
        from delia_tokenizer import ctokenize
        self.include_dic = []
        self.macro_dic = {}
        return scanne_macro(tokens_gen=scanne_include(scanner=ctokenize.ScannerFromFile(self.source),
                                                      include_dic=self.include_dic, include_stack=[]),
                            macro_dic=self.macro_dic, stack_macro=[])
