from delia_codegen.codeblock import CodeBlockNames
from delia_codegen.convert_type import convert_type


class LanguageControls:

    def gen_ControlsForLanguage(self, node):
        self.set_src(self.source[CodeBlockNames.CONTROL], node)
        self.visit(node.control_items)

    def gen_UsersLanguageIdentifier(self, node):
        self.src.newline("_users_language = ")
        self.visit(node.value)

    def gen_DigitSeparatorLanguageIdentifier(self, node):
        value = self.resolve(node.value)
        assert(value is not None)
        self.src.newline("_digit_separator = '{}'".format(value))

    def gen_DateLanguageIdentifier(self, node):
        self.src.newline("_date_language = ")
        self.visit(node.value)

    @convert_type
    def gen_UsersLanguage(self, node):
        self.src.write("procedure._users_language")

    @convert_type
    def gen_DateLanguage(self, node):
        self.src.write("procedure._date_language")

    @convert_type
    def gen_DigitSeparator(self, node):
        self.src.write("procedure._digit_separator")
