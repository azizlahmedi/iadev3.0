

class Singleton(object):
    '''
    Singleton implementation
    On: http://www.python.org/download/releases/2.2.3/descrintro/
    '''

    def __new__(cls, *args, **kwds):
        '''
        Return the instance of the singleton
        Call initialization method if not yet initialized
        '''
        it = cls.__dict__.get('__it__')
        if it is not None:
            return it
        it = object.__new__(cls)
        it.init(*args, **kwds)
        cls.__it__ = it
        return it

    def init(self, *args, **kwds):
        '''Initialization on first call'''
        pass

    def reset(cls):
        '''
        Reset the instance of the singleton
        Call close on the instance
        '''
        if cls.__dict__.get('__it__') is not None:
            it = cls.__it__
            cls.__it__ = None
            it.close()
    reset = staticmethod(reset)

    def close(self):
        '''Close the instance of the singleton'''
        pass
