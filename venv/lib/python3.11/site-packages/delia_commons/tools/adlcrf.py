# -*- coding: utf-8 -*-
from optparse import OptionParser
import exceptions, os, traceback, sys
import delia


def gen_crf(project_path, proc_name, out):

    if project_path is None or not os.path.isdir(project_path):
        raise Exception(1, "The projet path '%s' is not directory or invalid path" % project_path) 
    delia.Context().initialize(project_path)

    try:
        p = delia.common.deliaobject.Procedure(proc_name)
        for line in p.crf():
            print(line, file=out)
    except Exception as e:
            traceback.print_exc()
            delia.compiler.showsyntaxerror()
            raise e


def main():
    parser = OptionParser()
    parser.add_option("-p", "--project_path", action="store", type="string", dest="project_path", help="project path", metavar="path")
    parser.add_option("-n", "--proc_name", action="store", type="string", dest="proc_name", help="procedure name", metavar="name")
    parser.add_option("-o", "--out", action="store", type="string", dest="out_path", help="out path", metavar="name")

    (_options, args) = parser.parse_args()
    if len(args) != 0:
        parser.error("incorrect number of arguments")

    if _options.out_path is not None:
        if not os.path.isabs(_options.out_path):
            _options.out_path = os.path.join(os.path.curdir, _options.out_path)
        if not os.path.isdir(os.path.dirname(_options.out_path)):
            raise Exception(1, "Error: The output path '%s' is not file or invalid path" % os.path.dirname(_options.out_path))
        out = open(_options.out_path, "w")
    else:
        out = sys.stdout

    gen_crf(_options.project_path, _options.proc_name, out)

if __name__ == "__main__":
    main()
