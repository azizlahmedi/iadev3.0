# -*- coding: utf-8 -*-
import contextlib
import os
import tempfile
import time
import unittest

from delia_mlg.backends import CheckoutBackend


def get_content(path):
    with open(path, encoding='utf-8') as fd:
        return fd.read()


def set_content(path, content):
    with open(path, 'w', encoding='utf-8') as fd:
        fd.write(content)


class TestCheckoutBackend(unittest.TestCase):
    @contextlib.contextmanager
    def with_backend(self):
        with tempfile.TemporaryDirectory() as tmp:
            backend = CheckoutBackend(os.path.join(tmp, 'checkout'), 'cis', 'Ntic2007')
            backend.checkout('http://avalon.bams.corp:3180/svn/repos/ntic_test/trunk/test_oma/delia_mlg_test/checkout')
            yield backend

    def test(self):
        new_content = str(time.time())
        files = ('file1.txt', 'file2.txt')
        with self.with_backend() as backend:
            old_revision = backend.update(files)
            old_content = get_content(os.path.join(backend.root, 'file1.txt'))
            set_content(os.path.join(backend.root, 'file1.txt'), new_content)
            new_revision = backend.commit('test', files)
            self.assertEqual(new_revision, backend.update(('file1.txt',)))
        with self.with_backend() as backend:
            self.assertEqual(new_revision, backend.update(files))
            self.assertEqual(new_content, get_content(os.path.join(backend.root, 'file1.txt')))
            self.assertEqual(old_revision, backend.update(files, revision=old_revision))
            self.assertEqual(old_content, get_content(os.path.join(backend.root, 'file1.txt')))


if __name__ == '__main__':
    unittest.main()
