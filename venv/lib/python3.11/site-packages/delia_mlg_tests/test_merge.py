# -*- coding: utf-8 -*-
import os
import tempfile
import unittest

import polib
from delia_mlg import merge, backends


class TestMerge(unittest.TestCase):
    def setUp(self):
        super(TestMerge, self).setUp()
        self.data = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'data')
        self.merge_backend = merge.MergeBackend(backends.SanityBackend())

    def test_load_legacy_msgids(self):
        with tempfile.TemporaryDirectory() as temp:
            path = os.path.join(temp, 'toto.po')
            po = polib.POFile(encoding='utf-8')
            po.append(polib.POEntry(msgid=' toto ', msgstr=' tutu '))
            po.append(polib.POEntry(msgid='toto', msgstr='tata'))
            po.append(polib.POEntry(msgid=' foo  ', msgstr='  bar '))
            po.save(path)
            msgids = self.merge_backend.load_legacy_msgids('en', path)
            self.assertEqual({'foo ': ' bar', 'toto': 'tata', ' toto ': ' tutu ', ' foo  ': '  bar '}, msgids)

    def test_merge(self):
        cases = [
            ('abcd', '1234', {'ab': '12', 'cd': '34'}),
            ('abcd', None, {'ab': '12'}),
            ('abcd', '1234', {'ab': '12', 'cd': '34', 'c': '5', 'd': '6'}),
            ('?? ab >> cd ||', '?? 12 >> 34 ||', {'ab': '12', 'cd': '34'}),
        ]
        for msgid, msgstr, legacy_msgids in cases:
            self.assertEqual(msgstr, self.merge_backend.merge('en', msgid, legacy_msgids))

    def test_actual_1(self):
        msgid = '        V  A  L  E  U  R          STATUTS                    QUANTITE ET       DEV      P.R.U EN DEVISE       COURS      I      <-------------        Devise du portefeuille           ------------->               PRCT'
        legacy_msgids = self.merge_backend.load_legacy_msgids(
            'zh',
            os.path.join(self.data, 'newport_etastk_hisinv_zh.po'),
        )
        msgstr = self.merge_backend.merge('zh', msgid, legacy_msgids)
        self.assertEqual(
            '          资产                      资产/明细                      数量 +              报价       单位成本                  资产         含      <-------------        组合币种                             ------------->               百分比 ',
            msgstr,
        )

    def test_actual_2(self):
        msgid = '                                  VAL/LIGNE                 EXPR. QUANTITE     COT     ET EXPR. COURS         VALEUR     F   {0}   {1}   {2}   {3}  {4}{5}'
        legacy_msgids = self.merge_backend.load_legacy_msgids(
            'zh',
            os.path.join(self.data, 'newport_etastk_hisinv_zh.po'),
        )
        msgstr = self.merge_backend.merge('zh', msgid, legacy_msgids)
        self.assertEqual(
            '                                  状态                        数量类型               币种      和价格类型                  价格         F   {0}   {1}   {2}   {3}  {4}{5}',
            msgstr
        )


if __name__ == '__main__':
    unittest.main()
