# -*- coding: utf-8 -*-
import unittest

import polib

from delia_mlg.backends import SanityBackend, ForceBackend, GlobalPOBackend, TranslationBackend
from . import MockSourceBackend


class TestForceBackend(unittest.TestCase):
    def setUp(self):
        super(TestForceBackend, self).setUp()
        self.mock_force = MockSourceBackend()
        self.mock_global_po = MockSourceBackend()

    def get_backends(self):
        force_backend = ForceBackend(self.mock_force, SanityBackend())
        translation_backend = TranslationBackend(GlobalPOBackend(self.mock_global_po, SanityBackend()), SanityBackend(), force_backend)
        return force_backend, translation_backend

    def test(self):
        self.mock_force.add_translation('END', 'FIN')
        self.mock_global_po.add_translation('END', 'FOO')
        self.mock_force.add_translation('ALL', 'TOUS')
        self.mock_force.add_translation('FOO', 'BAR')
        self.mock_force.add_translation('FOO ', 'RABU')
        force_backend, translation_backend = self.get_backends()
        self.assertEqual('FIN', force_backend.get('END', 'en'))
        entry = polib.POEntry(msgid='END')
        self.assertTrue(translation_backend.translate_po_entry(entry, 'en'))
        self.assertEqual('FIN', entry.msgstr)
        self.assertEqual(' FIN  ', force_backend.get(' END  ', 'en'))
        entry = polib.POEntry(msgid=' END  ')
        self.assertTrue(translation_backend.translate_po_entry(entry, 'en'))
        self.assertEqual(' FIN  ', entry.msgstr)
        self.assertIsNone(force_backend.get('ALL', 'en'))
        self.assertEqual('TOUS', force_backend.get('ALL ', 'en'))
        self.assertEqual('TOUS ', force_backend.get('ALL  ', 'en'))
        self.assertEqual('BAR', force_backend.get('FOO', 'en'))
        self.assertEqual(' BAR', force_backend.get(' FOO', 'en'))
        self.assertEqual('RABU', force_backend.get('FOO ', 'en'))
        self.assertEqual(' RABU', force_backend.get(' FOO ', 'en'))
        self.assertEqual('RABU ', force_backend.get('FOO  ', 'en'))
        self.assertEqual(' RABU ', force_backend.get(' FOO  ', 'en'))


if __name__ == '__main__':
    unittest.main()
