# -*- coding: utf-8 -*-
import unittest

import polib

from delia_mlg import legacy_merge
from delia_mlg.backends import SanityBackend, POFileWrapper


class TestLegacyMerge(unittest.TestCase):
    def setUp(self):
        super(TestLegacyMerge, self).setUp()

    def get_global_po(self, msgids):
        po = polib.POFile()
        for msgid, msgstr in msgids.items():
            po.append(polib.POEntry(msgid=msgid, msgstr=msgstr))
        return po

    def assertMerged(self, data, msgid, msgstr):
        global_po = self.get_global_po(data)
        translations = legacy_merge.convert_global_po(global_po)
        po = POFileWrapper('assertMerged.po', 'en')
        entry = polib.POEntry(msgid=msgid)
        po.append(entry)
        legacy_merge.merge(SanityBackend(), po, translations)
        self.assertEqual(msgstr, entry.msgstr)

    def test(self):
        self.assertMerged({'prem': 'fisr', 'deux': 'seco'}, 'prem ! deux', 'fisr ! seco')
        self.assertMerged({'prem': 'fisr'}, 'prem ! deux', '')
        self.assertMerged({'prem': 'fisr'}, 'prem ! {0}', 'fisr ! {0}')
        self.assertMerged({'prem': 'fisr', 'deux': 'seco', 'troi': 'thir'}, 'prem ! deux : troi', 'fisr ! seco : thir')


if __name__ == '__main__':
    unittest.main()
