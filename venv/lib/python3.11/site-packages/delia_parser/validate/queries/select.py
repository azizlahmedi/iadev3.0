# -*- coding:utf-8 -*-

from delia_commons.errors import ErrorCode
from delia_parser import ast
from delia_parser.validate.convert_type import convert_type


class Select:
    def visit_Select(self, node):
        self.select(node)

    @convert_type
    def visit_ImplicitSelect(self, node):

        self.visit(node.qualified_rel_alias)

        relation_definition = node.relation_name.definition
        if relation_definition:
            if not isinstance(relation_definition, ast.Relation):
                self.add_error(ErrorCode.INVALID_DEFINITION_TYPE, node.relation_name, name=node.relation_name, kind="RELATION")
            else:
                keys = relation_definition.keys
                via_clause = node.qualified_rel_alias.via_clause

                if via_clause and not isinstance(via_clause, ast.ViaKeyClause):

                    via_keys = []
                    for value in via_clause.lkey_value:
                        if isinstance(value, ast.Rel):
                            field = value.left.name
                        elif isinstance(value, ast.ImplicitSelect):
                            field = value.field_name
                        else:
                            field = value.name
                        via_keys.append(field)

                    if any([key not in via_keys for key in keys]):
                        self.add_error(ErrorCode.IMPLICIT_SELECT_INCOMPLETE_QUALIFICATION, via_clause, name=node.relation_name)

        field_name = node.field_name
        if field_name.definition is None:
            self.add_error(ErrorCode.NAME_UNDECLARED_USAGE, node.field_name, name=field_name)
        elif not isinstance(field_name.definition, ast.Field):
            self.add_error(ErrorCode.INVALID_DEFINITION_TYPE, node.relation_name, name=node.relation_name, kind="FIELD")
        elif isinstance(relation_definition, ast.Relation) and field_name not in relation_definition.columns:
            self.add_error(ErrorCode.FIELD_WRONG_USAGE, node.field_name, name=field_name, relation_name=node.relation_name)
