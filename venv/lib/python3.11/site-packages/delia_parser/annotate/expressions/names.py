# -*- coding:utf-8 -*-
from delia_parser import ast


class Names:

    def visit_Name(self, node):
        if isinstance(node, ast.Name):
            node.definition = self.procedure_scope.get_def(node)
            if node.definition is None:
                for scope in self.scopes:
                    if scope.has_symbol(node):
                        node.definition = scope.get_def(node)
                        if node.definition and not self.in_decls:
                            node.definition.used = True
                        break
            else:
                if not self.in_decls:
                    node.definition.used = True

    def visit_Label_Name(self, node):
        if isinstance(node, ast.Name):
            for scope in self.scopes:
                if scope.has_symbol(node):
                    node.definition = scope.get_def(node)
                    if node.definition:
                        node.definition.used = True
                    break
