# -*- coding:utf-8 -*-


class Comparisons:

    def comparison(self, left, right):
        self.visit(left)
        self.visit(right)

    def visit_And(self, node):
        self.comparison(node.left, node.right)

    def visit_Or(self, node):
        self.comparison(node.left, node.right)

    def visit_Eqv(self, node):
        self.comparison(node.left, node.right)

    def visit_Xor(self, node):
        self.comparison(node.left, node.right)

    def visit_Eq(self, node):
        self.comparison(node.left, node.right)

    def visit_Ge(self, node):
        self.comparison(node.left, node.right)

    def visit_Gt(self, node):
        self.comparison(node.left, node.right)

    def visit_Le(self, node):
        self.comparison(node.left, node.right)

    def visit_Lt(self, node):
        self.comparison(node.left, node.right)

    def visit_Ne(self, node):
        self.comparison(node.left, node.right)

    def visit_Is(self, node):
        self.comparison(node.left, node.right)

    def visit_ExtendedComparisonAnd(self, node):
        self.visit(node.exps)

    def visit_ExtendedComparisonOr(self, node):
        self.visit(node.exps)

    def visit_Enclosed(self, node):
        self.visit(node.left)
