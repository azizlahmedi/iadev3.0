# -*- coding:utf-8 -*-
from delia_parser.scope import QuerySelectScope
from delia_parser.annotate.convert_type import convert_type


class Select:

    def visit_Select(self, node):
        self.select(node)

    @convert_type
    def visit_ImplicitSelect(self, node):

        relation_name = node.relation_name
        alias_name = node.alias_name
        self.relation_name_alias(relation_name, alias_name)

        if not node.is_relation_declared:
            return

        field_name = node.field_name
        rel_definition = relation_name.definition
        rel_definition.used = True

        qualified_rel_alias = node.qualified_rel_alias
        via_clause = qualified_rel_alias.via_clause

        self.visit(via_clause)

        self.optimize_via_clause(node)
        self.rebuild_viakey_clause(node)
        self.jsonize_via_clause(node)

        query_scope = QuerySelectScope(self.procedure_scope, node, relation_name, alias_name)
        node.scope = query_scope
        self.scopes.appendleft(query_scope)
        self.visit(field_name)
        self.scopes.popleft()
