# -*- coding:utf-8 -*-
from delia_parser.annotate.interfaces.report import Report
from delia_parser.annotate.interfaces.source import Source
from delia_parser.annotate.interfaces.accept import Accept


class Interface(Report,
                Source,
                Accept):

    def visit_ClearTerminalInport(self, node):
        raise NotImplementedError("ClearTerminalInport")

    def visit_ClearTerminalOutport(self, node):
        raise NotImplementedError("ClearTerminalOutport")

    def visit_WriteInvalids(self, node):
        self.visit(node.source_name)
        self.visit(node.output_list)

    def visit_Tab(self, node):
        self.visit(node.value)

    def visit_TabTo(self, node):
        self.visit(node.value)

    def visit_Skip(self, node):
        self.visit(node.value)

    def visit_SkipTo(self, node):
        self.visit(node.value)

    def visit_Text(self, node):
        self.visit(node.value)

    def visit_File(self, node):
        self.visit(node.value)

    def visit_FileExists(self, node):
        self.visit(node.left)

    def visit_Type(self, node):
        self.visit(node.output_list)
