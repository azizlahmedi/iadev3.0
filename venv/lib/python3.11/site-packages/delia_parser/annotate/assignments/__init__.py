# -*- coding:utf-8 -*-
from delia_parser import ast, types


class Assignment:

    def assign(self, node):

        self.visit(node.exp)

        node.in_local_function_key = self.in_local_function_key

        for receiving_field in node.receiving_fields:
            self.visit(receiving_field)
            self.update_datas_and_others_fields(receiving_field)

            if str(receiving_field.name).lower() in ('year', 'month', 'day',):
                self.update_datas_and_others_fields(receiving_field.parameters[0])

            # Optimize to do not generate TRIM for STRING assignation.
            if receiving_field.type is types.String() and \
                isinstance(node.exp, ast.CallingFunction) and \
                    str(node.exp.name).upper() == 'TRIM':
                node.exp.skip = True

    def visit_Add(self, node):
        self.assign(node)

    def visit_Subtract(self, node):
        self.assign(node)

    def visit_Move(self, node):
        self.assign(node)

    def visit_Let(self, node):
        self.assign(node)
