# -*- coding: utf-8 -*-
import os
import tempfile
import unittest
from unittest import TestCase

import factory_tests
from factory.backends.config import ProcedureConfigBackend
from factory_tests import MockSubversionBackend


class ProcedureConfigBackendTestCase(TestCase):
    def setUp(self):
        super(ProcedureConfigBackendTestCase, self).setUp()
        self.subversion_backend = MockSubversionBackend()
        self.procedure_config_backend = ProcedureConfigBackend(self.subversion_backend, factory_tests.SUBVERSION_URL)

    def test_no_conf(self):
        schema_version = 2009
        procedure_name = 'test'
        revision = 10
        with tempfile.TemporaryDirectory() as temp:
            output_dir = os.path.join(temp, 'conf')
            self.procedure_config_backend.download(schema_version, procedure_name, revision, output_dir)
            self.assertFalse(os.path.exists(output_dir))

    def _test_conf(self, schema_version):
        procedure_name = 'toto.tutu'
        revision = 10
        content = 'toto\n'
        with tempfile.TemporaryDirectory() as temp:
            output_dir = os.path.join(temp, 'conf')
            self.subversion_backend.add_url_content(
                factory_tests.SUBVERSION_URL + '/gp2009/adl/src/conf/toto_tutu.conf',
                content)
            self.procedure_config_backend.download(schema_version, procedure_name, revision, output_dir)
            path = os.path.join(output_dir, 'toto_tutu.conf')
            self.assertTrue(os.path.isfile(path))
            with open(path, 'r') as fd:
                self.assertEqual(content, fd.read())

    def test_conf(self):
        self._test_conf(2009)

    def test_conf_fallback(self):
        self._test_conf(2016)


if __name__ == '__main__':
    unittest.main()
