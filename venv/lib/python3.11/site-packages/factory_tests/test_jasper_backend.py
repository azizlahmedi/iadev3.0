# -*- coding: utf-8 -*-
import os
import tempfile
import unittest
from unittest import TestCase

import factory_tests
from factory.backends.jasper import JasperBackend
from factory_tests import MockSubversionBackend


class JasperBackendTestCase(TestCase):
    def setUp(self):
        super(JasperBackendTestCase, self).setUp()
        self.subversion_backend = MockSubversionBackend()
        self.jasper_backend = JasperBackend(self.subversion_backend, factory_tests.SUBVERSION_URL)

    def test_no_jasper(self):
        schema_version = 2009
        procedure_name = 'test'
        revision = 10
        with tempfile.TemporaryDirectory() as temp:
            output_dir = os.path.join(temp, 'jasper')
            self.jasper_backend.download(schema_version, procedure_name, revision, output_dir)
            self.assertFalse(os.path.exists(output_dir))

    def _test_jasper(self, schema_version):
        procedure_name = 'toto.tutu'
        revision = 10
        with tempfile.TemporaryDirectory() as temp:
            source_dir = os.path.join(temp, 'src')
            output_dir = os.path.join(temp, 'jasper')
            self.subversion_backend.add_url_folder(
                factory_tests.SUBVERSION_URL + '/gp2009/adl/src/jasper/toto_tutu',
                source_dir)
            os.makedirs(source_dir)
            with open(os.path.join(source_dir, 'default.jrxml'), 'w') as fd:
                fd.write('jrxml')
            with open(os.path.join(source_dir, 'default.properties'), 'w') as fd:
                fd.write('properties')
            self.jasper_backend.download(schema_version, procedure_name, revision, output_dir)
            jrxml_path = os.path.join(output_dir, 'toto_tutu', 'default.jrxml')
            self.assertTrue(os.path.isfile(jrxml_path))
            with open(jrxml_path, 'r') as fd:
                self.assertEqual('jrxml', fd.read())
            properties_path = os.path.join(output_dir, 'toto_tutu', 'default.properties')
            self.assertTrue(os.path.isfile(properties_path))
            with open(properties_path, 'r') as fd:
                self.assertEqual('properties', fd.read())

    def test_jasper(self):
        self._test_jasper(2009)

    def test_jasper_fallback(self):
        self._test_jasper(2016)


if __name__ == '__main__':
    unittest.main()
